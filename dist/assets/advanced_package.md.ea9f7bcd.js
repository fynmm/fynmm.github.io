import{_ as s,o as a,c as n,S as l}from"./chunks/framework.f15d8f8c.js";const m=JSON.parse('{"title":"Package版本修复","description":"node npm pnpm npm包修复","frontmatter":{"lang":"zh-CN","title":"Package版本修复","description":"node npm pnpm npm包修复"},"headers":[],"relativePath":"advanced/package.md","filePath":"advanced/package.md"}'),p={name:"advanced/package.md"},e=l(`<h1 id="修改npm包" tabindex="-1">修改npm包 <a class="header-anchor" href="#修改npm包" aria-label="Permalink to &quot;修改npm包&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">npm包有bug</p><p>有一种场景：如果你在开发过程中，发现某个npm包有Bug，应该怎么办？</p></div><h2 id="解决方案-两种" tabindex="-1">解决方案(两种) <a class="header-anchor" href="#解决方案-两种" aria-label="Permalink to &quot;解决方案(两种)&quot;">​</a></h2><ul><li>向原作者提issue，或者Fork该仓库代码，修改以后，提交合并请求。但是作者不一定能及时响应。</li><li>临时修改bug，此时又分成2种 <ul><li>改动量少，可以直接修改npm包代码的，考虑补丁方案。</li><li>改动量多，或者npm包代码是压缩混淆过的，不具备修改条件。修改源码后，再修改包名，重新发布，在应用代码中更换引用。这里称作更换包名方案。</li></ul></li></ul><h3 id="第一种-补丁方案" tabindex="-1">第一种-补丁方案 <a class="header-anchor" href="#第一种-补丁方案" aria-label="Permalink to &quot;第一种-补丁方案&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">npm版</p><ol><li>npm i patch-package</li><li>在node_modules中找到你需要修改的包，修改并保存</li><li>npx patch-package package-name //package-name是你修改的包名</li><li>第三步运行后会在项目根目录下创建一个patches文件夹，并生成一个名为package-name+version.patch的文件。</li><li>在<code>package.json</code>的<code>scripts</code>中加入<code>&quot;postinstall&quot;:&quot;patch-package&quot;</code></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// package.json</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postinstall</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">patch-package</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div class="info custom-block"><p class="custom-block-title">pnpm版</p><ol><li>pnpm patch package-name // package-name是你修改的包名</li><li>执行完上一步之后会有一个路径，打开后，修改代码并保存</li><li><code>pnpm patch-commit &#39;/private/var/folders/3c/wgkg24rx33j306r688k19f4h0000gn/T/a9b0966db0c1fdd2c9aee661d7d217fc&#39;</code> // 这段代码也是第一步中提示的</li><li>然后你会发现<code>package.json</code>多了一部分内容</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pnpm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">patchedDependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">is-even@1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">patches/is-even@1.0.0.patch</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="5"><li>删除node_modules，重新pnpm i安装依赖，仍然与现在一样，这就代表成功了。</li></ol></div><h3 id="第二种-更换包名" tabindex="-1">第二种-更换包名 <a class="header-anchor" href="#第二种-更换包名" aria-label="Permalink to &quot;第二种-更换包名&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">更换包名</p><p>上面说过，如果要修改的代码较多，或者不具备修改条件，这时就需要修改源码。 到GitHub上找到npm包的源码，Fork该项目，修改代码后，再修改包名，重新发布，比如你要修改的包是lodash，可以修改为awesome-lodash，在应用代码中更换引用。</p></div><p>如果是你自己项目依赖需要修改的包(lodash)，那直接npm install修改后的包(awesome-lodash)，但是如果是第三方依赖的包有问题，应该怎么修改？我们不可能再去修改第三方的依赖方式，太麻烦了。 使用<code>pnpm</code>可以解决</p><ol><li>在根目录下新建<code>.pnpmfile.cjs</code>文件</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">readPackage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pkg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dependencies</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dependencies</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lodash</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dependencies</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lodash</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">npm:awesome-lodash@^1.0.0</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkg</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hooks</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    readPackage</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>此时就能修复第三方包里依赖的包有问题，直接替代它。</p>`,14),o=[e];function c(t,r,i,D,d,F){return a(),n("div",null,o)}const u=s(p,[["render",c]]);export{m as __pageData,u as default};
